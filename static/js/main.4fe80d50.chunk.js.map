{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["initialState","breakLength","sessionLength","timeDisplaySeconds","timeDisplayMinutes","session","timeDisplayLabel","timer","Title","id","React","Component","Break","onClick","this","props","incrementBreakByOne","className","decrementBreakByOne","Session","incrementSessionByOne","decrementSessionByOne","TimeDisplay","count","timeCheck","TimeControls","resetToDefault","startStop","class","AudioFile","src","App","state","bind","runTime","playSound","setState","clearInterval","window","interval","document","getElementById","pause","currentTime","console","log","setInterval","play","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4fe80d50.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\nconst BREAK_LENGTH = 5;\nconst SESSION_LENGTH = 25;\nconst SESSION_RUNNING = \"Session\";\nconst SESSION_PAUSED = \"Break\";\n\nvar initialState = {\n  breakLength: BREAK_LENGTH,\n  sessionLength: SESSION_LENGTH,\n  timeDisplaySeconds: 0,\n  timeDisplayMinutes: SESSION_LENGTH,\n  session: true,\n  timeDisplayLabel: SESSION_RUNNING,\n  timer: false\n}\n\nclass Title extends React.Component {\n  render() {\n    return (\n      <div id=\"title\">\n        <h1>Pomodoro Clock</h1>\n        <h6>Code and Design by Armin Hafner</h6>\n      </div>\n    );\n  }\n}\n\nclass Break extends React.Component {\n  render () {\n    return (\n      <div id=\"break-label\">\n        <p>Break</p>\n        <button id=\"break-increment\" onClick={this.props.incrementBreakByOne}><i className=\"fas fa-arrow-up\"></i></button>\n       <p id=\"break-length\">{this.props.breakLength}</p>\n        <button id=\"break-decrement\" onClick={this.props.decrementBreakByOne}><i className=\"fas fa-arrow-down\"></i></button>\n      </div>\n    );\n  }\n}\n\n\nclass Session extends React.Component {\n  render () {\n    return (\n      <div id=\"session-label\">\n        <p>Session</p>\n        <button id=\"session-increment\" onClick={this.props.incrementSessionByOne}><i className=\"fas fa-arrow-up\"></i></button>\n       <p id=\"session-length\">{this.props.sessionLength}</p>\n        <button id=\"session-decrement\" onClick={this.props.decrementSessionByOne}><i className=\"fas fa-arrow-down\"></i></button>\n       </div>\n    );\n  }\n}\n\nclass TimeDisplay extends React.Component {\n  timeCheck (count) {\n    if (count<10) {\n      return \"0\" + count;\n    }\n    return count;\n  }\n  render() {\n    return (\n      <div id=\"time-display-container\">\n        <div id=\"timer-display\">\n          <p id=\"timer-label\">{this.props.timeDisplayLabel}</p>\n          <p id=\"time-left\">{this.timeCheck(this.props.timeDisplayMinutes)}:{this.timeCheck(this.props.timeDisplaySeconds)}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass TimeControls extends React.Component {\n  render() {\n    return (\n      <div id=\"controls\">\n        <button id=\"reset\" onClick={this.props.resetToDefault}>Reset</button>\n        <button id=\"start_stop\" onClick={this.props.startStop}><i class=\"fas fa-play\"></i><i class=\"fas fa-pause\"></i></button>\n      </div>\n    );\n  }\n}\n\nclass AudioFile extends React.Component {\n  render() {\n    return (\n      <div>\n        <audio id=\"beep\" src=\"https://dl.dropbox.com/s/nacdk0xey4io5d8/wink-sound-effect.mp3\"/>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = initialState;\n    this.decrementBreakByOne=this.decrementBreakByOne.bind(this);\n    this.incrementBreakByOne=this.incrementBreakByOne.bind(this);\n    this.decrementSessionByOne=this.decrementSessionByOne.bind(this);\n    this.incrementSessionByOne=this.incrementSessionByOne.bind(this);\n    this.resetToDefault=this.resetToDefault.bind(this);\n    this.runTime=this.runTime.bind(this);\n    this.startStop=this.startStop.bind(this);\n    this.playSound=this.playSound.bind(this);\n  }\n\n  decrementBreakByOne() {\n    if (this.state.breakLength>1 && this.state.timer===false) {\n      this.setState({breakLength: this.state.breakLength-1});\n    }\n  }\n  incrementBreakByOne() {\n    if (this.state.breakLength<=59 && this.state.timer===false) {\n      this.setState({breakLength: this.state.breakLength+1});\n    }\n  }\n\n  decrementSessionByOne() {\n    if (this.state.sessionLength>1 && this.state.timer===false) {\n      this.setState({\n        sessionLength: this.state.sessionLength-1,\n        timeDisplayMinutes: this.state.sessionLength-1,\n        timeDisplaySeconds: 0,\n        timer: false\n      });\n    }\n  }\n  incrementSessionByOne() {\n    if (this.state.sessionLength<=59 && this.state.timer===false) {\n      this.setState({\n        sessionLength: this.state.sessionLength+1,\n        timeDisplayMinutes: this.state.sessionLength+1,\n        timeDisplaySeconds: 0,\n        timer: false\n      });\n    }\n  }\n\n  resetToDefault() {\n    this.setState(initialState);\n    clearInterval(window.interval);\n    document.getElementById(\"beep\").pause();\n    document.getElementById(\"beep\").currentTime=0;\n    console.log(\"reset\");\n  }\n\n  runTime() {\n       if (this.state.timeDisplaySeconds===0 && this.state.timeDisplayMinutes===0 && this.state.session) {\n         this.setState({\n           session: false,\n           timeDisplayLabel: SESSION_PAUSED,\n           timeDisplayMinutes: this.state.breakLength\n         });\n         this.playSound();\n       } else if (this.state.timeDisplaySeconds===0 && this.state.timeDisplayMinutes===0 && this.state.session===false) {\n         this.setState({\n           session: true,\n           timeDisplayLabel: SESSION_RUNNING,\n           timeDisplayMinutes: this.state.sessionLength\n         });\n       } else if (this.state.timeDisplaySeconds===0) {\n         this.setState({\n           timeDisplaySeconds: 59,\n           timeDisplayMinutes: this.state.timeDisplayMinutes-1\n         });\n       } else {\n         this.setState({timeDisplaySeconds: this.state.timeDisplaySeconds-1});\n       }\n  }\n\n  startStop() {\n        if (this.state.timer) {\n          clearInterval(window.interval);\n        }\n        if (this.state.timer===false) {\n           window.interval = setInterval(this.runTime, 1000);\n        }\n        this.setState({timer: !this.state.timer});\n   }\n\n  playSound() {\n    document.getElementById(\"beep\").play();\n    console.log(\"Sound beep\");\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <Title />\n        <Break breakLength={this.state.breakLength}\n               decrementBreakByOne={this.decrementBreakByOne}\n               incrementBreakByOne={this.incrementBreakByOne} />\n        <Session sessionLength={this.state.sessionLength}\n                 decrementSessionByOne={this.decrementSessionByOne}\n                 incrementSessionByOne={this.incrementSessionByOne} />\n        <TimeDisplay timeDisplayLabel={this.state.timeDisplayLabel}\n                     timeDisplayMinutes={this.state.timeDisplayMinutes}\n                     timeDisplaySeconds={this.state.timeDisplaySeconds} />\n        <TimeControls resetToDefault={this.resetToDefault}\n                      startStop={this.startStop} />\n        <AudioFile />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}